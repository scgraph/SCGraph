This is the experimental port to openFrameworks. Currently only tested on OSX using XCode to build.

- Requirements:

 - SuperCollider 3.7 or newer (http://supercollider.github.io)
   - The binary for OSX works just fine
   - but you also need the sources somewhere
 - openFrameworks 0.9.3 or newer


- How to build

  - Move this folder into your openFrameworks/apps/myApps folder
  - open the scgraph.xcodeproj in XCode
  - In the build settings, change
 	SC3_LIBRARY_PATH -> directory which contains libscsynth (e.g. on a mac:
	 /Applications/SuperCollider/SuperCollider.app/Contents/MacOS)
 	SC3_PLUGIN_PATH -> directory containing the UGens (e. g. on a mac:
	 /Applications/SuperCollider/SuperCollider.app/Contents/Resources/plugins)
   SC3_SOURCES_PATH -> directory with the SC3 sources


  - it should now build in xcode and run

- What to do if the build succeeded?

Create these folders:

	   ~/.scgraph/synthdefs
 	   ~/.scgraph/textures
 	   ~/.scgraph/textures/default

Optionally set the env paths: in your ~/.bashrc add:

   #scgraph
   export SCGRAPH_SYNTHDEF_PATH=~/.scgraph/synthdefs
   export SCGRAPH_TEXTURE_PATH=~/.scgraph/textures
   export SCGRAPH_PLUGIN_PATH=/usr/local/lib/scgraph/plugins/

You can also set/overwrite the paths and other options using the 
GServerOptions class (see the helpfile).

On OSX, copy or symlink the src/sc folder to ~/Library/Application Support/SuperCollider/Extensions/


Open supercollider and do:

(
g = GServer.default;
// g.boot; // no need for that as XCode has already done it
)

(
{
	var source;
	source = GRotate.gr( GCube.gr(2), [0,1,0], SinOsc.kr(0.2).range(0, 360) );
	GGLRenderer.gr(source);
}.play(g);
)

Have a look at the examples in 

$(PREFIX)/share/doc/examples/

They show you how to make simple animations with scgraph.

- Highlighting of .gr in emacs

  If you want to have .gr highlighted like .kr and .ar in emacs sclang-mode, add this to e. g. your .emacs.d/init.el:

  (add-hook 'sclang-mode-hook
          '(lambda () (push "gr" sclang-font-lock-method-list))
          t)

- Caveats

This port is very experimental. Use at your own risk.